version: '3.8'

services:
  app:
    build: .
    container_name: "app-django-server"
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/home/python/app/
    ports:
      - 8000:8000
    networks:
      - django-network
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:alpine
    container_name: "postgres-django-server"
    volumes:
      - ./.database:/var/lib/postgresql/data
    environment:
      - LC_ALL=C.UTF-8
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 3s
      timeout: 3s
      retries: 10
    networks:
      - django-network
    env_file:
      - ./.env

  redis:
    image: redis:alpine
    container_name: "redis-django-server"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

    networks:
      - django-network

  celery:
    build: .
    restart: always
    container_name: "celery_worker-django-server"
    volumes:
      - .:/app/
    command: "celery -A core.celery worker --loglevel=info"
    env_file:
      - ./.env
    networks:
      - django-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

networks:
  django-network:
    driver: bridge

volumes:
    django-db: